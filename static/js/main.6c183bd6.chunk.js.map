{"version":3,"sources":["Board.js","Game.js","index.js"],"names":["Square","props","className","highlight","onClick","value","Board","i","index","this","line","length","squares","row","push","renderSquare","status","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","calWin","result","setState","concat","step","count","lines","current","winner","moves","map","item","desc","jumpTo","draw","reset","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c183bd6.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './style.css';\n  \nclass Board extends Component {\n    renderSquare(i) {\n        var highlight = false;\n        for(let index = 0; index < this.props.line.length; index ++) {\n            if(i === this.props.line[index]){\n                highlight = true;\n            }\n        }\n        return (<Square \n            value={this.props.squares[i]} \n            onClick={() => {this.props.onClick(i)}}\n            highlight = {highlight}\n        />);\n    }\n    render() {\n        const row = [];\n        for(let i = 0; i < 9; i = i + 3){\n            row.push(\n                <div key = {i} className=\"board-row\">\n                    {this.renderSquare(i)}\n                    {this.renderSquare(i + 1)}\n                    {this.renderSquare(i + 2)}\n                </div>\n            )\n        }\n        return (\n        <div>\n            <div className=\"status\">{this.props.status}</div>\n            {row}\n        </div>\n        );\n    }      \n}\n\n//只包含 render 方法且沒有自己 state 的 component 適合寫成 function component \nfunction Square(props) {\n    return (\n        <button className= {props.highlight ? \"highlight\" : \"square\" } onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nexport default Board;","import React, {Component} from 'react';\nimport './style.css';\nimport Board from './Board.js'\n// JSX 用 {} 標示代表裡面是純 javascript\nclass Game extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }\n            ],\n            stepNumber: 0,\n            xIsNext: true,\n        }\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (this.calWin(squares).result || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState(() => {\n            return {\n                // concat return a new array, it is better tahn push in React (immutable)\n                history: history.concat([{\n                    squares: squares,\n                }]),\n                xIsNext: !this.state.xIsNext,\n                stepNumber: history.length,\n            }\n        })\n    }\n\n    jumpTo(step) {\n        this.setState(() => {\n            return {\n                stepNumber: step,\n                xIsNext: (step % 2) === 0, \n            }\n        })\n    }\n\n    reset() {\n        this.setState(() => {\n            return {\n                history: [{\n                    squares: Array(9).fill(null),\n                }\n                ],\n                stepNumber: 0,\n                xIsNext: true, \n            }\n        }) \n    }\n\n    calWin(squares){\n        var count = 0;\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6]\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const line = lines[i];\n            if (squares[line[0]] !== null && squares[line[1]] === squares[line[0]] && squares[line[2]] === squares[line[0]]){\n                return {result: squares[line[0]], line: line};\n            }  \n        }\n        for (let i = 0; i < squares.length; i++) {\n            if (squares[i] !== null) {\n                count ++;\n            }\n        }\n        if(count === 9)\n            return {result: 'tie', line: []};\n        return {result: null, line: []};    \n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = this.calWin(current.squares).result;\n        const line = this.calWin(current.squares).line;\n        const moves = history.map((item, index) => {\n            const desc = index ?\n            \"Go to move #\" + index :\n            \"Go to game start\";\n            return (\n                <li key={index}>\n                    <button onClick={() => {this.jumpTo(index)}}> {desc} </button>\n                </li>\n            )\n        })\n        const draw = (winner === \"tie\") ? <button onClick={() => {this.reset()}}> Draw </button> : null ;\n        let status;\n        if (winner) {\n            if(winner === \"tie\") {\n                status = \"Tie\";\n            }else {\n                status = \"Winner: \" + winner;\n            }\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n        return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n            <Board \n                squares = {current.squares}\n                onClick = {(i) => this.handleClick(i)}\n                status = {status}\n                line = {line}\n            />\n            {draw}\n            </div>\n            <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport Game from './Game.js'\n  \nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n  "],"sourceRoot":""}