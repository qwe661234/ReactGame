{"ast":null,"code":"var _jsxFileName = \"/Users/yenfuchen/ReactJs/first-app/src/Game.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport Board from './Board.js'; // JSX 用 {} 標示代表裡面是純 javascript\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (this.calWin(squares).result || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState(() => {\n      return {\n        // concat return a new array, it is better tahn push in React (immutable)\n        history: history.concat([{\n          squares: squares\n        }]),\n        xIsNext: !this.state.xIsNext,\n        stepNumber: history.length\n      };\n    });\n  }\n\n  jumpTo(step) {\n    this.setState(() => {\n      return {\n        stepNumber: step,\n        xIsNext: step % 2 === 0\n      };\n    });\n  }\n\n  reset() {\n    this.setState(() => {\n      return {\n        history: [{\n          squares: Array(9).fill(null)\n        }],\n        stepNumber: 0,\n        xIsNext: true\n      };\n    });\n  }\n\n  calWin(squares) {\n    var count = 0;\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n\n      if (squares[line[0]] !== null && squares[line[1]] === squares[line[0]] && squares[line[2]] === squares[line[0]]) {\n        return {\n          result: squares[line[0]],\n          line: line\n        };\n      }\n    }\n\n    for (let i = 0; i < squares.length; i++) {\n      if (squares[i] !== null) {\n        count++;\n      }\n    }\n\n    if (count === 9) return {\n      result: 'tie',\n      line: null\n    };\n    return {\n      result: null,\n      line: null\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = this.calWin(current.squares).result;\n    const line = this.calWin(current.squares).line;\n    const moves = history.map((item, index) => {\n      const desc = index ? \"Go to move #\" + index : \"Go to game start\";\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.jumpTo(index);\n          },\n          children: [\" \", desc, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this);\n    });\n    const draw = winner === \"tie\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        this.reset();\n      },\n      children: \" Draw \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 43\n    }, this) : null;\n    let status;\n\n    if (winner) {\n      if (winner === \"tie\") {\n        status = \"Tie\";\n      } else {\n        status = \"Winner: \" + winner;\n      }\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          status: status,\n          line: line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), draw]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/yenfuchen/ReactJs/first-app/src/Game.js"],"names":["React","Component","Board","Game","constructor","props","state","history","squares","Array","fill","stepNumber","xIsNext","handleClick","i","slice","current","length","calWin","result","setState","concat","jumpTo","step","reset","count","lines","line","render","winner","moves","map","item","index","desc","draw","status"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './style.css';\nimport Board from './Board.js'\n// JSX 用 {} 標示代表裡面是純 javascript\nclass Game extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }\n            ],\n            stepNumber: 0,\n            xIsNext: true,\n        }\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (this.calWin(squares).result || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState(() => {\n            return {\n                // concat return a new array, it is better tahn push in React (immutable)\n                history: history.concat([{\n                    squares: squares,\n                }]),\n                xIsNext: !this.state.xIsNext,\n                stepNumber: history.length,\n            }\n        })\n    }\n\n    jumpTo(step) {\n        this.setState(() => {\n            return {\n                stepNumber: step,\n                xIsNext: (step % 2) === 0, \n            }\n        })\n    }\n\n    reset() {\n        this.setState(() => {\n            return {\n                history: [{\n                    squares: Array(9).fill(null),\n                }\n                ],\n                stepNumber: 0,\n                xIsNext: true, \n            }\n        }) \n    }\n\n    calWin(squares){\n        var count = 0;\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6]\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const line = lines[i];\n            if (squares[line[0]] !== null && squares[line[1]] === squares[line[0]] && squares[line[2]] === squares[line[0]]){\n                return {result: squares[line[0]], line: line};\n            }  \n        }\n        for (let i = 0; i < squares.length; i++) {\n            if (squares[i] !== null) {\n                count ++;\n            }\n        }\n        if(count === 9)\n            return {result: 'tie', line: null};\n        return {result: null, line: null};    \n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = this.calWin(current.squares).result;\n        const line = this.calWin(current.squares).line;\n        const moves = history.map((item, index) => {\n            const desc = index ?\n            \"Go to move #\" + index :\n            \"Go to game start\";\n            return (\n                <li key={index}>\n                    <button onClick={() => {this.jumpTo(index)}}> {desc} </button>\n                </li>\n            )\n        })\n        const draw = (winner === \"tie\") ? <button onClick={() => {this.reset()}}> Draw </button> : null ;\n        let status;\n        if (winner) {\n            if(winner === \"tie\") {\n                status = \"Tie\";\n            }else {\n                status = \"Winner: \" + winner;\n            }\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n        return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n            <Board \n                squares = {current.squares}\n                onClick = {(i) => this.handleClick(i)}\n                status = {status}\n                line = {line}\n            />\n            {draw}\n            </div>\n            <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}