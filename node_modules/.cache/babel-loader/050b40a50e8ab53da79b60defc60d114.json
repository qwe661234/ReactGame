{"ast":null,"code":"var _jsxFileName = \"/Users/yenfuchen/ReactJs/first-app/src/Game.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport Board from './Board.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calWin(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState(() => {\n      return {\n        // concat return a new array, it is better tahn push in React (immutable)\n        history: history.concat([{\n          squares: squares\n        }]),\n        xIsNext: !this.state.xIsNext\n      };\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calWin(current.squares);\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          status: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction calWin(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (squares[line[0]] !== null && squares[line[1]] === squares[line[0]] && squares[line[2]] === squares[line[0]]) return squares[line[0]];\n  }\n\n  for (let i = 0; i < squares.length; i++) {\n    if (squares != null) {}\n  }\n\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/yenfuchen/ReactJs/first-app/src/Game.js"],"names":["React","Component","Board","Game","constructor","props","state","history","squares","Array","fill","xIsNext","handleClick","i","current","length","slice","calWin","setState","concat","render","winner","status","lines","line"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './style.css';\nimport Board from './Board.js'\n\nclass Game extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }\n            ],\n            xIsNext: true,\n        }\n    }\n\n    handleClick(i) {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calWin(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState(() => {\n            return {\n                // concat return a new array, it is better tahn push in React (immutable)\n                history: history.concat([{\n                    squares: squares,\n                }]),\n                xIsNext: !this.state.xIsNext,\n            }\n        })\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const winner = calWin(current.squares);\n        let status;\n        if (winner) {\n            status = \"Winner: \" + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n        return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n            <Board \n                squares = {current.squares}\n                onClick = {(i) => this.handleClick(i)}\n                status = {status}\n            />\n            </div>\n            <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n            </div>\n        </div>\n        );\n    }\n}\n\nfunction calWin(squares){\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (squares[line[0]] !== null && squares[line[1]] === squares[line[0]] && squares[line[2]] === squares[line[0]])\n            return squares[line[0]];\n    }\n    for (let i = 0; i < squares.length; i++) {\n        if (squares != null) {\n\n        }\n    }\n    return null;    \n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}