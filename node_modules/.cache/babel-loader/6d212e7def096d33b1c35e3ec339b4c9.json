{"ast":null,"code":"var _jsxFileName = \"/Users/yenfuchen/ReactJs/first-app/src/Game.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport Board from './Board.js'; // JSX 用 {} 標示代表裡面是純 javascript\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calWin(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState(() => {\n      return {\n        // concat return a new array, it is better tahn push in React (immutable)\n        history: history.concat([{\n          squares: squares\n        }]),\n        xIsNext: !this.state.xIsNext\n      };\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calWin(current.squares);\n    const moves = history.map((item, index) => {\n      const desc = index ? \"Go to move #\" + index : \"Go to game start\";\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.jumpTo(index);\n          },\n          children: [\" \", desc, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      if (winner === \"tie\") {\n        status = \"Tie\";\n      } else {\n        status = \"Winner: \" + winner;\n      }\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          status: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction calWin(squares) {\n  var count = 0;\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (squares[line[0]] !== null && squares[line[1]] === squares[line[0]] && squares[line[2]] === squares[line[0]]) return squares[line[0]];\n  }\n\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] !== null) {\n      count++;\n    }\n  }\n\n  if (count === 9) return 'tie';\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/yenfuchen/ReactJs/first-app/src/Game.js"],"names":["React","Component","Board","Game","constructor","props","state","history","squares","Array","fill","xIsNext","handleClick","i","current","length","slice","calWin","setState","concat","render","winner","moves","map","item","index","desc","jumpTo","status","count","lines","line"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB,C,CACA;;;;AACA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACzBG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CAAC;AACNC,QAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADH,OAAD,CADA;AAKTC,MAAAA,OAAO,EAAE;AALA,KAAb;AAOH;;AAEDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,UAAMN,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMO,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMP,OAAO,GAAGM,OAAO,CAACN,OAAR,CAAgBQ,KAAhB,EAAhB;;AACA,QAAIC,MAAM,CAACT,OAAD,CAAN,IAAmBA,OAAO,CAACK,CAAD,CAA9B,EAAmC;AAC/B;AACH;;AACDL,IAAAA,OAAO,CAACK,CAAD,CAAP,GAAa,KAAKP,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKO,QAAL,CAAc,MAAM;AAChB,aAAO;AACH;AACAX,QAAAA,OAAO,EAAEA,OAAO,CAACY,MAAR,CAAe,CAAC;AACrBX,UAAAA,OAAO,EAAEA;AADY,SAAD,CAAf,CAFN;AAKHG,QAAAA,OAAO,EAAE,CAAC,KAAKL,KAAL,CAAWK;AALlB,OAAP;AAOH,KARD;AASH;;AAEDS,EAAAA,MAAM,GAAG;AACL,UAAMb,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMO,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMM,MAAM,GAAGJ,MAAM,CAACH,OAAO,CAACN,OAAT,CAArB;AAEA,UAAMc,KAAK,GAAGf,OAAO,CAACgB,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,YAAMC,IAAI,GAAGD,KAAK,GAClB,iBAAiBA,KADC,GAElB,kBAFA;AAGA,0BACI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAC,iBAAKE,MAAL,CAAYF,KAAZ;AAAmB,WAA3C;AAAA,0BAA+CC,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KATa,CAAd;AAUA,QAAIE,MAAJ;;AACA,QAAIP,MAAJ,EAAY;AACR,UAAGA,MAAM,KAAK,KAAd,EAAqB;AACjBO,QAAAA,MAAM,GAAG,KAAT;AACH,OAFD,MAEM;AACFA,QAAAA,MAAM,GAAG,aAAaP,MAAtB;AACH;AACJ,KAND,MAMO;AACHO,MAAAA,MAAM,GAAG,mBAAmB,KAAKtB,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACH;;AACD,wBACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACA,QAAC,KAAD;AACI,UAAA,OAAO,EAAIG,OAAO,CAACN,OADvB;AAEI,UAAA,OAAO,EAAKK,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB,CAFtB;AAGI,UAAA,MAAM,EAAIe;AAHd;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACA;AAAA,oBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAeH;;AAvEwB;;AA0E7B,SAASL,MAAT,CAAgBT,OAAhB,EAAwB;AACpB,MAAIqB,KAAK,GAAG,CAAZ;AACA,QAAMC,KAAK,GAAG,CACV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADU,EAEV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFU,EAGV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHU,EAIV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJU,EAKV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALU,EAMV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANU,EAOV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPU,EAQV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARU,CAAd;;AAUA,OAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiB,KAAK,CAACf,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACnC,UAAMkB,IAAI,GAAGD,KAAK,CAACjB,CAAD,CAAlB;AACA,QAAIL,OAAO,CAACuB,IAAI,CAAC,CAAD,CAAL,CAAP,KAAqB,IAArB,IAA6BvB,OAAO,CAACuB,IAAI,CAAC,CAAD,CAAL,CAAP,KAAqBvB,OAAO,CAACuB,IAAI,CAAC,CAAD,CAAL,CAAzD,IAAsEvB,OAAO,CAACuB,IAAI,CAAC,CAAD,CAAL,CAAP,KAAqBvB,OAAO,CAACuB,IAAI,CAAC,CAAD,CAAL,CAAtG,EACI,OAAOvB,OAAO,CAACuB,IAAI,CAAC,CAAD,CAAL,CAAd;AACP;;AACD,OAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACO,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACrC,QAAIL,OAAO,CAACK,CAAD,CAAP,KAAe,IAAnB,EAAyB;AACrBgB,MAAAA,KAAK;AACR;AACJ;;AACD,MAAGA,KAAK,KAAK,CAAb,EACI,OAAO,KAAP;AACJ,SAAO,IAAP;AACH;;AAED,eAAe1B,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport './style.css';\nimport Board from './Board.js'\n// JSX 用 {} 標示代表裡面是純 javascript\nclass Game extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }\n            ],\n            xIsNext: true,\n        }\n    }\n\n    handleClick(i) {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calWin(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState(() => {\n            return {\n                // concat return a new array, it is better tahn push in React (immutable)\n                history: history.concat([{\n                    squares: squares,\n                }]),\n                xIsNext: !this.state.xIsNext,\n            }\n        })\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const winner = calWin(current.squares);\n        \n        const moves = history.map((item, index) => {\n            const desc = index ?\n            \"Go to move #\" + index :\n            \"Go to game start\";\n            return (\n                <li>\n                    <button onClick={() => {this.jumpTo(index)}}> {desc} </button>\n                </li>\n            )\n        })\n        let status;\n        if (winner) {\n            if(winner === \"tie\") {\n                status = \"Tie\";\n            }else {\n                status = \"Winner: \" + winner;\n            }\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n        return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n            <Board \n                squares = {current.squares}\n                onClick = {(i) => this.handleClick(i)}\n                status = {status}\n            />\n            </div>\n            <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n            </div>\n        </div>\n        );\n    }\n}\n\nfunction calWin(squares){\n    var count = 0;\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (squares[line[0]] !== null && squares[line[1]] === squares[line[0]] && squares[line[2]] === squares[line[0]])\n            return squares[line[0]];\n    }\n    for (let i = 0; i < squares.length; i++) {\n        if (squares[i] !== null) {\n            count ++;\n        }\n    }\n    if(count === 9)\n        return 'tie';\n    return null;    \n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}